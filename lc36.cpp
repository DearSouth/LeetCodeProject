#include <algorithm>
#include <iostream>
#include <unordered_map>
#include <vector>
using namespace std;

bool isValidSudoku(vector<vector<char>>& board) {
	bool row[9][9] = { false };
	bool colum[9][9] = { false };
	bool block[9][9] = { false };

	int i = 0;
	for (auto rowIt : board)
	{
		int j = 0;
		for (auto num : rowIt)
		{
			if (num != '.')
			{
				int tempNum = num - '0' - 1;
				if (row[i][tempNum] || colum[j][tempNum] || block[i/3*3+j/3][tempNum])
				{
					return false;
				}
				row[i][tempNum] = true;
				colum[j][tempNum] = true;
				block[i / 3 * 3 + j / 3][tempNum] = true;
			}
			j++;
		}
		i++;
	}
	return true;
}
//int main()
//{
//	vector<vector<char>> board = {
//	{ '8', '3', '.', '.', '7', '.', '.', '.', '.'},
//	{ '6', '.', '.', '1', '9', '5', '.', '.', '.' },
//	{ '.', '9', '8', '.', '.', '.', '.', '6', '.' },
//	{ '8', '.', '.', '.', '6', '.', '.', '.', '3' },
//	{ '4', '.', '.', '8', '.', '3', '.', '.', '1' },
//	{ '7', '.', '.', '.', '2', '.', '.', '.', '6' },
//	{ '.', '6', '.', '.', '.', '.', '2', '8', '.' },
//	{ '.', '.', '.', '4', '1', '9', '.', '.', '5' },
//	{ '.', '.', '.', '.', '8', '.', '.', '7', '9' }
//	};
//	bool resutl = isValidSudoku(board);
//
//	std::cout << "Hello World!\n";
//}
//['8', '3', '.', '.', '7', '.', '.', '.', '.'],
//['6', '.', '.', '1', '9', '5', '.', '.', '.'],
//['.', '9', '8', '.', '.', '.', '.', '6', '.'],
//['8', '.', '.', '.', '6', '.', '.', '.', '3'],
//['4', '.', '.', '8', '.', '3', '.', '.', '1'],
//['7', '.', '.', '.', '2', '.', '.', '.', '6'],
//['.', '6', '.', '.', '.', '.', '2', '8', '.'],
//['.', '.', '.', '4', '1', '9', '.', '.', '5'],
//['.', '.', '.', '.', '8', '.', '.', '7', '9']

//{ '5', '3', '.', '.', '7', '.', '.', '.', '.'},
//{ '6', '.', '.', '1', '9', '5', '.', '.', '.' },
//{ '.', '9', '8', '.', '.', '.', '.', '6', '.' },
//{ '8', '.', '.', '.', '6', '.', '.', '.', '3' },
//{ '4', '.', '.', '8', '.', '3', '.', '.', '1' },
//{ '7', '.', '.', '.', '2', '.', '.', '.', '6' },
//{ '.', '6', '.', '.', '.', '.', '2', '8', '.' },
//{ '.', '.', '.', '4', '1', '9', '.', '.', '5' },
//{ '.', '.', '.', '.', '8', '.', '.', '7', '9' }
